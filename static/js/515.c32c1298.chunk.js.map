{"version":3,"file":"static/js/515.c32c1298.chunk.js","mappings":"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","sources":["webpack://checkers-online-frontend/./src/Components/ProfilePage/ProfilePage.module.css?9e02","Components/ProfilePage/GamesBlock/ModalCreateGame.jsx","Components/ProfilePage/GamesBlock/ModalConnectToGame.jsx","Components/ProfilePage/GamesBlock/GamesBlock.jsx","Components/ProfilePage/ProfilePage.jsx","Components/ProfilePage/ProfilePageContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhotoAndLoginBlock\":\"ProfilePage_userPhotoAndLoginBlock__1JfNh\",\"nameBlock\":\"ProfilePage_nameBlock__pHmDX\",\"copy\":\"ProfilePage_copy__PNjWm\",\"gameCardBlock\":\"ProfilePage_gameCardBlock__jzv5s\",\"gamesBlockHeader\":\"ProfilePage_gamesBlockHeader__Z2CI4\",\"gameCard\":\"ProfilePage_gameCard__xuvKm\",\"win\":\"ProfilePage_win__ywIdB\",\"lose\":\"ProfilePage_lose__VoJT8\",\"waiting\":\"ProfilePage_waiting__6+o21\",\"ready\":\"ProfilePage_ready__jbGYu\",\"user\":\"ProfilePage_user__-XiU2\",\"gameId\":\"ProfilePage_gameId__-KLAl\"};","import React from \"react\";\r\nimport {Button, Modal, Tooltip, Typography} from \"antd\";\r\nimport styles from \"../ProfilePage.module.css\";\r\nimport {CopyOutlined} from \"@ant-design/icons\";\r\n\r\nconst {Text} = Typography;\r\n\r\n// Модульное окно с уведомлением о создании новой игры\r\nconst ModalCreateGame = ({messageApi,  createdGameId, onCreateNewGameModalClose, isCreateGameModalOpen}) => {\r\n\r\n\t// функция для создания всплывающего окна\r\n\tconst success = () => {\r\n\t\tmessageApi.open({\r\n\t\t\ttype: \"success\",\r\n\t\t\tcontent: \"Скопировано\",\r\n\t\t\tduration: 2\r\n\t\t});\r\n\t};\r\n\r\n\tconst onClickCopy = () => { // функция копирования по нажатию\r\n\t\tnavigator.clipboard.writeText(String(createdGameId))\r\n\t\t\t.then(() => success()); // отображение всплывающего окна\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle=\"Игра создана\"\r\n\t\t\topen={isCreateGameModalOpen}\r\n\t\t\tclosable={false}\r\n\t\t\tfooter={[\r\n\t\t\t\t<Button type=\"primary\" onClick={onCreateNewGameModalClose}>OK</Button>\r\n\t\t\t]}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<Text>Для начала игры ваш соперник должен нажать кнопку «Присоединиться» и ввести идентификатор игры:</Text><br/>\r\n\t\t\t\t<Text>id: </Text>\r\n\t\t\t\t<Tooltip title=\"Копировать\">\r\n\t\t\t\t\t<Text code onClick={onClickCopy} className={styles.copy}>{createdGameId}&nbsp;<CopyOutlined/></Text>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ModalCreateGame;","import React from \"react\";\r\nimport {Button, Form, InputNumber, Modal, Typography} from \"antd\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst {Text} = Typography;\r\n\r\n// Модульное окно для подключения к уже существующей игре\r\nconst ModalConnectToGame = ({isConnectGameModalOpen, isConnectGameLoading, connectedGameId, connectGameError, setConnectToGameModalOpened, onConnectToGameModalFormSubmit}) => {\r\n\r\n\tconst [formConnectToGame] = Form.useForm(); // для работы с формой в модульном окне подключения к игре\r\n\r\n\tif (connectedGameId) { // если появился идентификатор подключения к игре, значит удалось подсоединиться к игре, значит нужно перейти к игре\r\n\t\tsetConnectToGameModalOpened(false); // закрытие модульного окна\r\n\t\treturn <Navigate to={\"/game\"}/>; // переход на страницу игры\r\n\t\t// TODO изменить путь к игре\r\n\t}\r\n\r\n\t// функция обработчик нажатия кнопки \"Отмена\" в модульном окне подключения к игре\r\n\tconst onConnectGameModalCancelButtonClick = () => {\r\n\t\tformConnectToGame.resetFields(); // очистка формы\r\n\t\tsetConnectToGameModalOpened(false); // закрытие модульного окна\r\n\t};\r\n\r\n\t// функция обработчик отправки формы в модульном окне подключения к игре\r\n\t// функция вызывается только если форма прошла валидацию\r\n\tconst onConnectToGameFormSubmitted = () => {\r\n\t\tonConnectToGameModalFormSubmit(formConnectToGame.getFieldValue(\"gameId\"));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle=\"Присоединиться к игре\"\r\n\t\t\topen={isConnectGameModalOpen}\r\n\t\t\tfooter={[\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"default\"\r\n\t\t\t\t\tonClick={onConnectGameModalCancelButtonClick}\r\n\t\t\t\t\tkey=\"cancel\">Отмена\r\n\t\t\t\t</Button>,\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\tonClick={() => formConnectToGame.submit()}\r\n\t\t\t\t\tloading={isConnectGameLoading}\r\n\t\t\t\t\tkey=\"ok\">OK\r\n\t\t\t\t</Button>\r\n\t\t\t]}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<Text>Для подключения к игре введите её идентификатор</Text><br/>\r\n\t\t\t\t<Form\r\n\t\t\t\t\tonFinish={onConnectToGameFormSubmitted}\r\n\t\t\t\t\tform={formConnectToGame}\r\n\t\t\t\t\trequiredMark={false}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tlabel=\"id\"\r\n\t\t\t\t\t\tname=\"gameId\"\r\n\t\t\t\t\t\tvalidateStatus={connectGameError ? \"error\" : \"success\"}\r\n\t\t\t\t\t\thelp={connectGameError}\r\n\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: \"Введите идентификатор игры\",\r\n\t\t\t\t\t\t}]}>\r\n\t\t\t\t\t\t<InputNumber size=\"small\" min={1}/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ModalConnectToGame;","import {GAME_STATUS_BLACK_TURN, GAME_STATUS_BLACK_WIN, GAME_STATUS_WAITING_FOR_OPPONENT, GAME_STATUS_WHITE_TURN, GAME_STATUS_WHITE_WIN} from \"../../../Redux/ProfileReducer\";\r\nimport {ClockCircleOutlined, MehOutlined, PlusSquareOutlined, RightSquareOutlined, TrophyOutlined, UsergroupAddOutlined} from \"@ant-design/icons\";\r\nimport styles from \"../ProfilePage.module.css\";\r\nimport {CHECKER_COLOR_BLACK, CHECKER_COLOR_WHITE} from \"../../../Redux/GameReducer\";\r\nimport {Button, Card, message, Spin, Tooltip} from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport React from \"react\";\r\nimport ModalCreateGame from \"./ModalCreateGame\";\r\nimport ModalConnectToGame from \"./ModalConnectToGame\";\r\n\r\n// карточка с игрой\r\n// game = {\r\n// \tid: 1,\r\n// \topponentId: 32,\r\n// \topponentLogin: \"UserLogin\",\r\n// \tplayerColor: \"BLACK\",\r\n// \tstatus: GAME_STATUS_WHITE_TURN\r\n// }\r\nconst GameNode = ({game}) => {\r\n\tlet gameStatus = game.status; // статус игры\r\n\tlet icon; // иконка\r\n\tlet background; // стиль фона для карточки\r\n\tif (gameStatus === GAME_STATUS_WAITING_FOR_OPPONENT) {\r\n\t\tgameStatus = \"Ожидаем соперника\";\r\n\t\ticon = <ClockCircleOutlined/>;\r\n\t\tbackground = styles.waiting;\r\n\t} else {\r\n\t\tif ((gameStatus === GAME_STATUS_WHITE_WIN && game.playerColor === CHECKER_COLOR_WHITE) ||\r\n\t\t\t(gameStatus === GAME_STATUS_BLACK_WIN && game.playerColor === CHECKER_COLOR_BLACK)) {\r\n\t\t\tgameStatus = \"Вы победили\";\r\n\t\t\ticon = <TrophyOutlined/>;\r\n\t\t\tbackground = styles.win;\r\n\t\t} else {\r\n\t\t\tif (gameStatus === GAME_STATUS_WHITE_WIN || gameStatus === GAME_STATUS_BLACK_WIN) {\r\n\t\t\t\tgameStatus = \"Вы проиграли\";\r\n\t\t\t\ticon = <MehOutlined/>;\r\n\t\t\t\tbackground = styles.lose;\r\n\t\t\t} else {\r\n\t\t\t\tif ((gameStatus === GAME_STATUS_WHITE_TURN && game.playerColor === CHECKER_COLOR_WHITE) ||\r\n\t\t\t\t\t(gameStatus === GAME_STATUS_BLACK_TURN && game.playerColor === CHECKER_COLOR_BLACK)) {\r\n\t\t\t\t\tgameStatus = \"Ваш ход\";\r\n\t\t\t\t\ticon = <RightSquareOutlined/>;\r\n\t\t\t\t\tbackground = styles.ready;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgameStatus = \"Ход соперника\";\r\n\t\t\t\t\ticon = <ClockCircleOutlined/>;\r\n\t\t\t\t\tbackground = styles.waiting;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className={styles.gameCard + \" \" + background}>\r\n\t\t\t{icon}&nbsp;&nbsp;\r\n\t\t\t{\r\n\t\t\t\tgame.opponentId &&\r\n\t\t\t\t<Tooltip title={\"id: \" + game.opponentId}>\r\n\t\t\t\t\t<span className={styles.user}>{game.opponentLogin}</span>&nbsp;\r\n\t\t\t\t</Tooltip>\r\n\t\t\t}\r\n\t\t\t<span>{gameStatus}</span>&nbsp;\r\n\t\t\t<span className={styles.gameId}>(id: {game.id})</span>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst GamesBlock = ({games, isGamesListLoading, isCreateGameLoading, onCreateNewGameButtonClick, setConnectToGameModalOpened, createGameModalProps, connectToGameModalProps}) => {\r\n\r\n\tconst [messageApi, contextHolder] = message.useMessage(); // для отображения всплывающего сообщения\r\n\r\n\tlet gamesArr = [];\r\n\tif (!isGamesListLoading && games && games !== []) {\r\n\t\tgamesArr = games.map(game => <GameNode key={game.id} game={game}/>);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{contextHolder}\r\n\t\t\t<div className={styles.gamesBlockHeader}>\r\n\t\t\t\t<Title level={2}>Список партий</Title>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tloading={isCreateGameLoading}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\ticon={<PlusSquareOutlined/>}\r\n\t\t\t\t\t\tonClick={onCreateNewGameButtonClick}>Создать\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\ticon={<UsergroupAddOutlined/>}\r\n\t\t\t\t\t\tonClick={() => setConnectToGameModalOpened(true)}>Присоединиться\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tisGamesListLoading\r\n\t\t\t\t\t? <Spin tip=\"Подгружаем данные\"/>\r\n\t\t\t\t\t: <div className={styles.gameCardBlock}>{gamesArr}</div>\r\n\t\t\t}\r\n\t\t\t<ModalCreateGame messageApi={messageApi} {...createGameModalProps}/>\r\n\t\t\t<ModalConnectToGame {...connectToGameModalProps}/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GamesBlock;","import React from \"react\";\r\nimport PageWithDefaultMenuSidebar from \"../PageWithSideMenu/PageWithStandartMenu\";\r\nimport {Avatar} from \"antd\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport styles from \"./ProfilePage.module.css\"\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport GamesBlock from \"./GamesBlock/GamesBlock\";\r\n\r\nconst UserPhotoAndLoginBlock = ({login}) => {\r\n\treturn (\r\n\t\t<div className={styles.userPhotoAndLoginBlock}>\r\n\t\t\t<Avatar\r\n\t\t\t\tsize={100}\r\n\t\t\t\ticon={<UserOutlined/>}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.nameBlock}>\r\n\t\t\t\t<Title level={2}>{login}</Title>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst ProfilePage = ({login, gamesBlockProps}) => {\r\n\treturn (\r\n\t\t<PageWithDefaultMenuSidebar>\r\n\t\t\t<UserPhotoAndLoginBlock login={login}/>\r\n\t\t\t<GamesBlock {...gamesBlockProps}/>\r\n\t\t</PageWithDefaultMenuSidebar>\r\n\t);\r\n}\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n\tselectConnectedGameId,\r\n\tselectConnectGameError,\r\n\tselectCreatedGameId,\r\n\tselectGames,\r\n\tselectIsConnectGameLoading,\r\n\tselectIsConnectGameModalOpen,\r\n\tselectIsCreateGameLoading,\r\n\tselectIsCreateGameModalOpen,\r\n\tselectIsGamesListLoading,\r\n\tsetIsConnectGameModalOpen,\r\n\tsetIsCreateGameModalOpen,\r\n\ttryConnectToGameAsync,\r\n\ttryCreateNewGameAsync,\r\n\ttryGetGamesListAsync\r\n} from \"../../Redux/ProfileReducer\";\r\nimport {selectLogin} from \"../../Redux/AuthReducer\";\r\n\r\nconst ProfilePageContainer = () => {\r\n\r\n\tconst login = useSelector(selectLogin);\r\n\tconst games = useSelector(selectGames);\r\n\tconst isGamesListLoading = useSelector(selectIsGamesListLoading);\r\n\tconst isCreateGameLoading = useSelector(selectIsCreateGameLoading);\r\n\tconst createdGameId = useSelector(selectCreatedGameId);\r\n\tconst isCreateGameModalOpen = useSelector(selectIsCreateGameModalOpen);\r\n\tconst isConnectGameModalOpen = useSelector(selectIsConnectGameModalOpen);\r\n\tconst isConnectGameLoading = useSelector(selectIsConnectGameLoading);\r\n\tconst connectedGameId = useSelector(selectConnectedGameId);\r\n\tconst connectGameError = useSelector(selectConnectGameError);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tif (games === null) {\r\n\t\tdispatch(tryGetGamesListAsync());\r\n\t}\r\n\r\n\t// нажатие по кнопке \"Создать\" для создания новой игры\r\n\tconst onCreateNewGameButtonClick = () => {\r\n\t\tdispatch(tryCreateNewGameAsync());\r\n\t};\r\n\r\n\t// нажатие на ок для закрытия модульного окна с сообщением о созданной игре\r\n\tconst onCreateNewGameModalClose = () => {\r\n\t\tdispatch(setIsCreateGameModalOpen(false));\r\n\t\tdispatch(tryGetGamesListAsync());\r\n\t};\r\n\r\n\t// установка значения открытия модульного окна \"Присоединиться к игре\"\r\n\tconst setConnectToGameModalOpened = (open) => {\r\n\t\tdispatch(setIsConnectGameModalOpen(open));\r\n\t};\r\n\r\n\tconst onConnectToGameModalFormSubmit = (gameId) => {\r\n\t\tdispatch(tryConnectToGameAsync(gameId));\r\n\t}\r\n\r\n\t// упаковка props для более удобной передачи между компонентами\r\n\tconst gamesBlockProps = {\r\n\t\tgames,\r\n\t\tisGamesListLoading,\r\n\t\tisCreateGameLoading,\r\n\t\tonCreateNewGameButtonClick,\r\n\t\tsetConnectToGameModalOpened,\r\n\t\tcreateGameModalProps: {\r\n\t\t\tcreatedGameId,\r\n\t\t\tonCreateNewGameModalClose,\r\n\t\t\tisCreateGameModalOpen\r\n\t\t},\r\n\t\tconnectToGameModalProps: {\r\n\t\t\tisConnectGameModalOpen,\r\n\t\t\tisConnectGameLoading,\r\n\t\t\tconnectedGameId,\r\n\t\t\tconnectGameError,\r\n\t\t\tsetConnectToGameModalOpened,\r\n\t\t\tonConnectToGameModalFormSubmit\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ProfilePage login={login} gamesBlockProps={gamesBlockProps}/>\r\n\t);\r\n}\r\n\r\nexport default withAuthRedirect(ProfilePageContainer);"],"names":["Text","Typography","messageApi","createdGameId","onCreateNewGameModalClose","isCreateGameModalOpen","title","open","closable","footer","type","onClick","code","navigator","clipboard","writeText","String","then","content","duration","className","styles","CopyOutlined","isConnectGameModalOpen","isConnectGameLoading","connectedGameId","connectGameError","setConnectToGameModalOpened","onConnectToGameModalFormSubmit","Form","formConnectToGame","to","resetFields","submit","loading","onFinish","getFieldValue","form","requiredMark","label","name","validateStatus","help","rules","required","message","size","min","GameNode","icon","background","game","gameStatus","status","GAME_STATUS_WAITING_FOR_OPPONENT","ClockCircleOutlined","GAME_STATUS_WHITE_WIN","playerColor","CHECKER_COLOR_WHITE","GAME_STATUS_BLACK_WIN","CHECKER_COLOR_BLACK","TrophyOutlined","MehOutlined","GAME_STATUS_WHITE_TURN","GAME_STATUS_BLACK_TURN","RightSquareOutlined","opponentId","opponentLogin","id","games","isGamesListLoading","isCreateGameLoading","onCreateNewGameButtonClick","createGameModalProps","connectToGameModalProps","contextHolder","gamesArr","map","Title","level","PlusSquareOutlined","UsergroupAddOutlined","tip","UserPhotoAndLoginBlock","login","UserOutlined","gamesBlockProps","withAuthRedirect","useSelector","selectLogin","selectGames","selectIsGamesListLoading","selectIsCreateGameLoading","selectCreatedGameId","selectIsCreateGameModalOpen","selectIsConnectGameModalOpen","selectIsConnectGameLoading","selectConnectedGameId","selectConnectGameError","dispatch","useDispatch","tryGetGamesListAsync","setIsConnectGameModalOpen","tryCreateNewGameAsync","setIsCreateGameModalOpen","gameId","tryConnectToGameAsync"],"sourceRoot":""}