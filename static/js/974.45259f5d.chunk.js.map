{"version":3,"file":"static/js/974.45259f5d.chunk.js","mappings":"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","sources":["webpack://checkers-online-frontend/./src/Components/GamePage/CheckersField/CheckersField.module.css?04a0","Assets/Img/Chekers/BlackQueen.svg","Assets/Img/Chekers/WhiteQueen.svg","Assets/Img/Chekers/Black.svg","Components/GamePage/CheckersField/CheckersField.jsx","webpack://checkers-online-frontend/./src/Components/GamePage/GamePage.module.css?c0cd","Components/GamePage/GamePage.jsx","Components/GamePage/GamePageContainer.jsx","Components/HOC/withAuthRedirect.jsx","../node_modules/@ant-design/icons-svg/es/asn/FrownOutlined.js","../node_modules/@ant-design/icons/es/icons/FrownOutlined.js","Components/PageNotFound/PageNotFound.jsx","webpack://checkers-online-frontend/./src/Components/TemplatePageWithMenu/TemplatePageWithMenu.module.css?1b26","Components/TemplatePageWithMenu/TemplatePageWithMenu.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"checkersField\":\"CheckersField_checkersField__5I996\",\"letters\":\"CheckersField_letters__hW59M\",\"lettersTop\":\"CheckersField_lettersTop__22LOg\",\"lettersBottom\":\"CheckersField_lettersBottom__van6G\",\"numbers\":\"CheckersField_numbers__ZoKYg\",\"numbersLeft\":\"CheckersField_numbersLeft__hW187\",\"numbersRight\":\"CheckersField_numbersRight__5RHpU\",\"cellsField\":\"CheckersField_cellsField__t6if+\",\"checkersFieldRow\":\"CheckersField_checkersFieldRow__a97xq\",\"blackCell\":\"CheckersField_blackCell__YDxPZ\",\"whiteCell\":\"CheckersField_whiteCell__jRUyy\",\"availableCell\":\"CheckersField_availableCell__wIu4D\",\"checker\":\"CheckersField_checker__0jVkb\",\"checkerPlayer\":\"CheckersField_checkerPlayer__kZHN6\",\"checkerSelected\":\"CheckersField_checkerSelected__+6GkT\"};","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBlackQueen(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100mm\",\n    height: \"100mm\",\n    viewBox: \"0 0 100 100\",\n    id: \"svg5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"layer1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    style: {\n      fill: \"#373737\",\n      stroke: \"#000000\",\n      strokeWidth: 1.45,\n      fillOpacity: 1,\n      strokeDasharray: \"none\"\n    },\n    id: \"path3080\",\n    cx: 50.129402,\n    cy: 49.972546,\n    r: 48.280346\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    style: {\n      fill: \"#373737\",\n      fillOpacity: 1,\n      stroke: \"#000000\",\n      strokeWidth: 1.16018,\n      strokeDasharray: \"none\"\n    },\n    id: \"path3080-0\",\n    cx: 50.29356,\n    cy: 50.193779,\n    rx: 36.310677,\n    ry: 36.833721\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#acaa6d\",\n      fillOpacity: 1,\n      stroke: \"#000000\",\n      strokeWidth: 1.45\n    },\n    d: \"m 29.125482,45.191656 c 1.32771,3.700537 4.331597,11.232016 5.855324,15.041292 1.523727,3.809275 1.567251,3.896326 6.225594,3.852634 4.658343,-0.04369 13.931023,-0.217826 18.536515,-0.172646 4.605492,0.04518 4.543932,0.309452 5.796004,-3.547979 1.252073,-3.857432 3.817178,-11.834662 4.894646,-15.742864 1.077467,-3.908202 0.666737,-3.745917 -1.738909,-2.914555 -2.405646,0.831362 -6.805936,2.3317 -9.006282,3.103837 -2.200346,0.772137 -2.200346,0.815667 -3.397488,-1.448149 -1.197141,-2.263816 -3.591493,-6.834852 -4.788775,-9.076904 -1.197283,-2.242052 -1.197283,-2.154989 -2.481604,0.130531 -1.28432,2.285521 -3.852808,6.76949 -5.081709,9.021614 -1.228901,2.252125 -1.118522,2.272344 -3.469432,1.619328 -2.350909,-0.653016 -7.162929,-1.979246 -9.743126,-2.70766 -2.580198,-0.728415 -2.928468,-0.859016 -1.600758,2.841521 z\",\n    id: \"path12350\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlackQueen);\nexport default __webpack_public_path__ + \"static/media/BlackQueen.04b418a082c57e040b7f1b2928e42c8e.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgWhiteQueen(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100mm\",\n    height: \"100mm\",\n    viewBox: \"0 0 100 100\",\n    id: \"svg5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"layer1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    style: {\n      fill: \"#e4e4e4\",\n      stroke: \"#000000\",\n      strokeWidth: 1.45,\n      fillOpacity: 1,\n      strokeDasharray: \"none\"\n    },\n    id: \"path3080\",\n    cx: 50.129402,\n    cy: 49.972546,\n    r: 48.280346\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    style: {\n      fill: \"#e4e4e4\",\n      fillOpacity: 1,\n      stroke: \"#000000\",\n      strokeWidth: 1.16018,\n      strokeDasharray: \"none\"\n    },\n    id: \"path3080-0\",\n    cx: 50.29356,\n    cy: 50.193779,\n    rx: 36.310677,\n    ry: 36.833721\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#acaa6d\",\n      fillOpacity: 0.65357137,\n      stroke: \"#000000\",\n      strokeWidth: 1.45\n    },\n    d: \"m 29.125482,45.191656 c 1.32771,3.700537 4.331597,11.232016 5.855324,15.041292 1.523727,3.809275 1.567251,3.896326 6.225594,3.852634 4.658343,-0.04369 13.931023,-0.217826 18.536515,-0.172646 4.605492,0.04518 4.543932,0.309452 5.796004,-3.547979 1.252073,-3.857432 3.817178,-11.834662 4.894646,-15.742864 1.077467,-3.908202 0.666737,-3.745917 -1.738909,-2.914555 -2.405646,0.831362 -6.805936,2.3317 -9.006282,3.103837 -2.200346,0.772137 -2.200346,0.815667 -3.397488,-1.448149 -1.197141,-2.263816 -3.591493,-6.834852 -4.788775,-9.076904 -1.197283,-2.242052 -1.197283,-2.154989 -2.481604,0.130531 -1.28432,2.285521 -3.852808,6.76949 -5.081709,9.021614 -1.228901,2.252125 -1.118522,2.272344 -3.469432,1.619328 -2.350909,-0.653016 -7.162929,-1.979246 -9.743126,-2.70766 -2.580198,-0.728415 -2.928468,-0.859016 -1.600758,2.841521 z\",\n    id: \"path12350\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWhiteQueen);\nexport default __webpack_public_path__ + \"static/media/WhiteQueen.1a036d2a0d3d912d39226611496470dc.svg\";\nexport { ForwardRef as ReactComponent };","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBlack(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100mm\",\n    height: \"100mm\",\n    viewBox: \"0 0 100 100\",\n    id: \"svg5\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs2\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"layer1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    style: {\n      fill: \"#373737\",\n      stroke: \"#000000\",\n      strokeWidth: 1.45,\n      fillOpacity: 1,\n      strokeDasharray: \"none\"\n    },\n    id: \"path3080\",\n    cx: 50.129402,\n    cy: 49.972546,\n    r: 48.280346\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    style: {\n      fill: \"#373737\",\n      fillOpacity: 1,\n      stroke: \"#000000\",\n      strokeWidth: 1.16018,\n      strokeDasharray: \"none\"\n    },\n    id: \"path3080-0\",\n    cx: 50.29356,\n    cy: 50.193779,\n    rx: 36.310677,\n    ry: 36.833721\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlack);\nexport default __webpack_public_path__ + \"static/media/Black.89cd2513aff4bafc1851b83f8b43dc26.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport styles from \"./CheckersField.module.css\"\r\nimport blackQueen from \"../../../Assets/Img/Chekers/BlackQueen.svg\";\r\nimport whiteQueen from \"../../../Assets/Img/Chekers/WhiteQueen.svg\";\r\nimport blackChecker from \"../../../Assets/Img/Chekers/Black.svg\";\r\nimport whiteChecker from \"../../../Assets/Img/Chekers/White.svg\";\r\nimport {CHECKER_COLOR_BLACK, CHECKER_TYPE_CHECKER} from \"../../../Redux/GameReducer\";\r\nimport {letters} from \"../GamePageContainer\";\r\n\r\nconst Checker = ({type, color, selected, onSelectChecker, position, playerColor}) => {\r\n\tconst checkerOnClick = () => {\r\n\t\tonSelectChecker(position);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={styles.checker + (selected ? (\" \" + styles.checkerSelected) : (playerColor === color ? (\" \" + styles.checkerPlayer) : \"\"))}\r\n\t\t\tsrc={\r\n\t\t\t\tcolor === CHECKER_COLOR_BLACK\r\n\t\t\t\t\t? (type === CHECKER_TYPE_CHECKER ? blackChecker : blackQueen)\r\n\t\t\t\t\t: (type === CHECKER_TYPE_CHECKER ? whiteChecker : whiteQueen)\r\n\t\t\t}\r\n\t\t\talt=\"checker\"\r\n\t\t\tonClick={playerColor === color ? checkerOnClick : undefined}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst Cell = ({isBlack, checker, selected, onSelectChecker, position, playerColor, isAvailable}) => {\r\n\treturn (\r\n\t\t<div className={(isBlack ? styles.blackCell : styles.whiteCell) + (isAvailable ? (\" \" + styles.availableCell) : \"\")}>\r\n\t\t\t{\r\n\t\t\t\tchecker\r\n\t\t\t\t\t? <Checker type={checker.type} color={checker.color} selected={selected} onSelectChecker={onSelectChecker} position={position} playerColor={playerColor}/>\r\n\t\t\t\t\t: <div></div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst Row = ({rowNumber, gameField, selectedCheckerPosition, onSelectChecker, playerColor, availableFields}) => {\r\n\tlet isBlack = rowNumber % 2 !== 1; // вычисление цвета первой клетки ряда\r\n\tconst cells = letters.map(letter => {\r\n\t\tisBlack = !isBlack;\r\n\t\tconst position = letter + rowNumber; // позиция в шашечной нотации, например: a1 или g5\r\n\t\tlet selected = false; // является ли шашка на позиции выбранной\r\n\t\tconst checker = gameField.find(elem => { // поиск: есть ли шашка на этой позиции\r\n\t\t\tif (elem.position === position) {\r\n\t\t\t\tif (position === selectedCheckerPosition)\r\n\t\t\t\t\tselected = true;\r\n\t\t\t\treturn elem;\r\n\t\t\t} else return false;\r\n\t\t});\r\n\r\n\t\t// является ли отрисовываемая клетка доступной к ходу\r\n\t\tconst isAvailable = availableFields.find(elem => {\r\n\t\t\treturn elem === position;\r\n\t\t});\r\n\r\n\t\treturn <Cell\r\n\t\t\tkey={position}\r\n\t\t\tisBlack={isBlack}\r\n\t\t\tchecker={checker}\r\n\t\t\tselected={selected}\r\n\t\t\tonSelectChecker={onSelectChecker}\r\n\t\t\tposition={position}\r\n\t\t\tplayerColor={playerColor}\r\n\t\t\tisAvailable={isAvailable}\r\n\t\t/>\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={styles.checkersFieldRow}>\r\n\t\t\t{cells}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst CheckersField = ({gameField, playerColor, selectedCheckerPosition, onSelectChecker, availableFields}) => {\r\n\r\n\tlet numbers = [8, 7, 6, 5, 4, 3, 2, 1]; // ряд чисел для составления доски\r\n\r\n\tif (playerColor === CHECKER_COLOR_BLACK) // если игрок играет за черные шашки, то поле надо перевернуть\r\n\t\tnumbers = numbers.reverse()\r\n\r\n\tconst rows = numbers.map(number => // формирование строк в которые будут помещены клетки с игрой\r\n\t\t<Row key={number}\r\n\t\t\t rowNumber={number}\r\n\t\t\t gameField={gameField}\r\n\t\t\t selectedCheckerPosition={selectedCheckerPosition}\r\n\t\t\t onSelectChecker={onSelectChecker}\r\n\t\t\t playerColor={playerColor}\r\n\t\t\t availableFields={availableFields}\r\n\t\t/>\r\n\t);\r\n\r\n\tconst numbersSide = numbers.map(number => { // формирование блоков для нумерации доски\r\n\t\treturn <div key={number + \" \" + number}>{number}</div>\r\n\t});\r\n\r\n\tconst lettersSide = letters.map(letter => { // формирование блоков для нумерации доски с помощью букв\r\n\t\treturn <div key={letter + letter}>{letter}</div>\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={styles.checkersField}>\r\n\t\t\t<div className={styles.lettersTop + \" \" + styles.letters}>{lettersSide}</div>\r\n\t\t\t<div className={styles.numbersLeft + \" \" + styles.numbers}>{numbersSide}</div>\r\n\t\t\t<div className={styles.cellsField}>\r\n\t\t\t\t{rows}\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.numbersRight + \" \" + styles.numbers}>{numbersSide}</div>\r\n\t\t\t<div className={styles.lettersBottom + \" \" + styles.letters}>{lettersSide}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CheckersField;","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"GamePage_user__C4Fzx\",\"checkerImg\":\"GamePage_checkerImg__h5uZj\",\"gameBlock\":\"GamePage_gameBlock__FJkLb\",\"checkersField\":\"GamePage_checkersField__StnyP\",\"gameBlockFooterWrapper\":\"GamePage_gameBlockFooterWrapper__fgZte\",\"gameBlockFooter\":\"GamePage_gameBlockFooter__0-Trc\"};","import React from \"react\";\r\nimport CheckersField from \"./CheckersField/CheckersField\";\r\nimport TemplatePageWithMenu from \"../TemplatePageWithMenu/TemplatePageWithMenu\";\r\nimport {Button} from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport blackChecker from \"../../Assets/Img/Chekers/Black.svg\";\r\nimport whiteChecker from \"../../Assets/Img/Chekers/White.svg\";\r\nimport styles from \"./GamePage.module.css\"\r\n\r\nconst GamePage = ({checkersFieldProps}) => {\r\n\treturn (\r\n\t\t<TemplatePageWithMenu>\r\n\t\t\t<Title level={2}>\r\n\t\t\t\t<span>Партия с OpponnentLogin</span>\r\n\t\t\t</Title>\r\n\t\t\t<div>\r\n\t\t\t\t<p className={styles.user}>\r\n\t\t\t\t\t<img src={blackChecker} alt=\"checker\" className={styles.checkerImg}/>\r\n\t\t\t\t\t<span>Ваш ход</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className={styles.user}>\r\n\t\t\t\t\t<img src={whiteChecker} alt=\"checker\" className={styles.checkerImg}/>\r\n\t\t\t\t\t<span>OpponnentLogin</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.gameBlock}>\r\n\t\t\t\t<div className={styles.checkersField}>\r\n\t\t\t\t\t<CheckersField {...checkersFieldProps}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.gameBlockFooterWrapper}>\r\n\t\t\t\t\t<div className={styles.gameBlockFooter}>\r\n\t\t\t\t\t\t<p>gameId: 3325</p>\r\n\t\t\t\t\t\t<Button danger>Сдаться</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</TemplatePageWithMenu>\r\n\t);\r\n}\r\n\r\nexport default GamePage;","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CHECKER_COLOR_BLACK, CHECKER_TYPE_CHECKER, selectAvailableFields, selectGameField, selectPlayerColor, selectSelectedCheckerPosition, setAvailableFields, setSelectedCheckerPosition} from \"../../Redux/GameReducer\";\r\nimport GamePage from \"./GamePage\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\n\r\nexport const letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n\r\n// получение объекта шашки на позиции\r\nexport const findChecker = (gameField, position) => {\r\n\treturn gameField.find(elem => {\r\n\t\tif (elem.position === position) {\r\n\t\t\treturn elem;\r\n\t\t} else return false;\r\n\t});\r\n}\r\n\r\nconst GamePageContainer = () => {\r\n\r\n\tconst params = useParams(); // использование параметров строки запроса\r\n\tconst gameId = params.gameId; // идентификатор игры\r\n\r\n\tconst gameField = useSelector(selectGameField);\r\n\tconst playerColor = useSelector(selectPlayerColor);\r\n\tconst selectedCheckerPosition = useSelector(selectSelectedCheckerPosition);\r\n\tconst availableFields = useSelector(selectAvailableFields);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tif (!Number(gameId) || Number(gameId) < 0) { // если не удается превратить строку в число, то значит переданный параметр (gameId) задан неправильно\r\n\t\treturn <PageNotFound title=\"Невалидный url игры\" message=\"Введите корректный url или выберите игру из списка в профиле\"/>\r\n\t}\r\n\r\n\tconst onSelectChecker = (position) => {\r\n\t\tlet numbers = [8, 7, 6, 5, 4, 3, 2, 1];\r\n\t\tif (playerColor === CHECKER_COLOR_BLACK)\r\n\t\t\tnumbers = numbers.reverse()\r\n\r\n\t\tlet availableFields = []; // поля, куда можно походить выбранной шашкой\r\n\r\n\t\t// координаты выбранной шашки\r\n\t\tconst letter = position[0];\r\n\t\tconst number = position[1];\r\n\r\n\t\t// индексы элементов координат в массиве\r\n\t\tconst letterIndex = letters.findIndex(elem => elem === letter);\r\n\t\tconst numberIndex = numbers.findIndex(elem => elem === Number(number));\r\n\r\n\t\tconst checker = findChecker(gameField, position); // получение объекта шашки на позиции\r\n\r\n\t\t// TODO нет проверки на конец поля впереди (возможно, что с боков тоже)\r\n\t\t// TODO ошибка с дамкой, которая может съесть, но при этом конец поля\r\n\r\n\t\t// функция поиска ходов для шашек\r\n\t\t// searchRight - булево значение, которое определяет направление поиска - право или лево\r\n\t\t// searchBack - булево значение, которое определяет направление поиска - вперед или назад (по умолчанию вперед)\r\n\t\t// возвращаемые значения: [hasToEat, position]\r\n\t\t// hasToEat - показывает обязана ли шашка есть в этом направлении\r\n\t\t// position - позиция (в шашечной нотации) с координатой хода\r\n\t\tconst findAvailableCellsForChecker = (searchRight, searchBack = false) => {\r\n\t\t\tconst m = searchRight ? 1 : -1; // multiplier - множитель, который отвечает за право или лево\r\n\r\n\t\t\t// поиск соседа на клетке рядом\r\n\t\t\tconst neighbourNumbPos = numbers[searchBack ? (numberIndex + 1) : (numberIndex - 1)]; //\r\n\t\t\tif (!neighbourNumbPos) // если клетка вылетает за пределы массива (undefined), то дальше проверять нет смысла\r\n\t\t\t\treturn [false, null];\r\n\t\t\tconst neighbourPosition = letters[letterIndex + (1 * m)] + neighbourNumbPos;\r\n\t\t\tconst neighbour = findChecker(gameField, neighbourPosition); // получение объекта шашки на позиции\r\n\t\t\tif (neighbour) {\r\n\t\t\t\t// если сосед есть, то проверить - можно ли его съесть\r\n\t\t\t\tif (neighbour.color !== playerColor) { // своего есть нельзя\r\n\t\t\t\t\t// теперь необходимо проверить свободно ли место за соседней шашкой (можно ли съесть врага)\r\n\t\t\t\t\tconst neighbourNumbPos = numbers[searchBack ? (numberIndex + 2) : (numberIndex - 2)]; //\r\n\t\t\t\t\tif (!neighbourNumbPos) // если клетка вылетает за пределы массива (undefined), то дальше проверять нет смысла\r\n\t\t\t\t\t\treturn [false, null];\r\n\t\t\t\t\tconst afterNeighbourPos = letters[letterIndex + (2 * m)] + neighbourNumbPos;\r\n\t\t\t\t\tif (!findChecker(gameField, afterNeighbourPos)) {\r\n\t\t\t\t\t\treturn [true, afterNeighbourPos];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else { // если соседа нет, то можно ходить\r\n\t\t\t\tif (!searchBack) // простой ход можно совершать только вперед\r\n\t\t\t\t\treturn [false, letters[letterIndex + (1 * m)] + numbers[numberIndex - 1]];\r\n\t\t\t}\r\n\t\t\treturn [false, null];\r\n\t\t};\r\n\r\n\t\t// функция поиска ходов для дамки в одном направлении\r\n\t\t// searchTop - булево значение, которое определяет направление поиска - вверх или вниз\r\n\t\t// searchRight - булево значение, которое определяет направление поиска - право или лево\r\n\t\t// возвращаемые значения: [hasToEat, cells]\r\n\t\t// hasToEat - показывает обязана ли дамка есть в этом направлении\r\n\t\t// cells - массив с доступными клетками для хода\r\n\t\tconst findAvailableCellsForQueen = (searchTop, searchRight) => {\r\n\t\t\tlet cells = []; // массив в который будут добавлены возможные ходы\r\n\t\t\tlet hasToEat = false; // необходимость есть\r\n\r\n\t\t\t// начальные условия (задание индексов)\r\n\t\t\tlet letInd = searchRight ? (letterIndex + 1) : (letterIndex - 1); // индекс отвечает за буквы\r\n\t\t\tlet numbInd = searchTop ? (numberIndex - 1) : (numberIndex + 1); // индекс отвечает за цифры\r\n\r\n\t\t\t// условие остановки для букв, в зависимости от направления поиска (право/лево)\r\n\t\t\tconst letterCondition = (letInd) => {\r\n\t\t\t\tif (searchRight)\r\n\t\t\t\t\treturn letInd < letters.length;\r\n\t\t\t\telse return letInd >= 0;\r\n\t\t\t}\r\n\r\n\t\t\t// условие остановки для чисел, в зависимости от направления поиска (верх/низ)\r\n\t\t\tconst numberCondition = (numbInd) => {\r\n\t\t\t\tif (searchTop)\r\n\t\t\t\t\treturn numbInd >= 0;\r\n\t\t\t\telse return numbInd < numbers.length;\r\n\t\t\t}\r\n\r\n\t\t\tfor (letInd; letterCondition(letInd) && numberCondition(numbInd); letInd = searchRight ? (letInd + 1) : (letInd - 1)) {\r\n\t\t\t\t// поиск соседа на клетке\r\n\t\t\t\tconst neighbourPosition = letters[letInd] + numbers[numbInd];\r\n\t\t\t\tconst neighbour = findChecker(gameField, neighbourPosition); // получение объекта шашки на позиции\r\n\t\t\t\tif (neighbour) { // если сосед есть\r\n\t\t\t\t\tif (neighbour.color === playerColor) { // за своего ходить нельзя, поэтому цикл обрывается\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else { // если это шашка соперника, то попробовать её съесть\r\n\t\t\t\t\t\t// вычисление координат следующей клетки\r\n\t\t\t\t\t\tconst afterNeighbourLetter = searchRight ? (letInd + 1) : (letInd - 1);\r\n\t\t\t\t\t\tconst afterNeighbourNumber = searchTop ? (numbInd - 1) : (numbInd + 1);\r\n\t\t\t\t\t\t// проверка свободно ли место за соседней шашкой (можно ли съесть врага)\r\n\t\t\t\t\t\t// при этом также проверяется: является ли это первым врагом\r\n\t\t\t\t\t\tif (!hasToEat && !findChecker(gameField, letters[afterNeighbourLetter] + numbers[afterNeighbourNumber])) {\r\n\t\t\t\t\t\t\tcells = []; // если есть враг, которого можно съесть, то дамка обязана это сделать, поэтому предыдущие клетки перестают быть доступными для хода\r\n\t\t\t\t\t\t\thasToEat = true;\r\n\t\t\t\t\t\t} else break;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else\r\n\t\t\t\t\tcells.push(letters[letInd] + numbers[numbInd]); // если соседей нет, то добавить клетку в список свободных для хода\r\n\r\n\t\t\t\tif (searchTop) // правила изменения индекса для обхода по числам\r\n\t\t\t\t\tnumbInd--;\r\n\t\t\t\telse numbInd++;\r\n\t\t\t}\r\n\r\n\t\t\treturn [hasToEat, cells];\r\n\t\t}\r\n\r\n\t\t// добавление доступных для хода клеток\r\n\t\tif (checker.type === CHECKER_TYPE_CHECKER) { // если выбрана шашка\r\n\t\t\tlet hasToEatArr = [];\r\n\t\t\tlet positions = [];\r\n\t\t\tif (letterIndex + 1 <= letters.length) { // проверка существует ли колонка правее\r\n\t\t\t\t[hasToEatArr[0], positions[0]] = findAvailableCellsForChecker(true);\r\n\t\t\t\t[hasToEatArr[1], positions[1]] = findAvailableCellsForChecker(true, true);\r\n\t\t\t}\r\n\t\t\tif (letterIndex - 1 >= 0) { // проверка существует ли колонка левее\r\n\t\t\t\t[hasToEatArr[2], positions[2]] = findAvailableCellsForChecker(false);\r\n\t\t\t\t[hasToEatArr[3], positions[3]] = findAvailableCellsForChecker(false, true);\r\n\t\t\t}\r\n\t\t\tif (!(hasToEatArr[0] || hasToEatArr[1] || hasToEatArr[2] || hasToEatArr[3])) { // если у шашки нет обязанности есть, то добавляются возможные для хода клетки\r\n\t\t\t\tif (positions[0]) availableFields.push(positions[0]);\r\n\t\t\t\tif (positions[2]) availableFields.push(positions[2]);\r\n\t\t\t} else { // иначе добавляются только те направления, в которых шашка обязана есть\r\n\t\t\t\tfor (let i = 0; i < hasToEatArr.length; i++) {\r\n\t\t\t\t\tif (hasToEatArr[i])\r\n\t\t\t\t\t\tavailableFields.push(positions[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else { // если выбрана дамка\r\n\t\t\t// собираются данные по всем направлениям\r\n\t\t\tlet hasToEatArr = [];\r\n\t\t\tlet cells = [];\r\n\t\t\t[hasToEatArr[0], cells[0]] = findAvailableCellsForQueen(true, true);\r\n\t\t\t[hasToEatArr[1], cells[1]] = findAvailableCellsForQueen(true, false);\r\n\t\t\t[hasToEatArr[2], cells[2]] = findAvailableCellsForQueen(false, true);\r\n\t\t\t[hasToEatArr[3], cells[3]] = findAvailableCellsForQueen(false, false);\r\n\r\n\t\t\tif (!(hasToEatArr[0] || hasToEatArr[1] || hasToEatArr[2] || hasToEatArr[3])) { // если у дамки нет обязанности есть шашку\r\n\t\t\t\tcells.forEach(arr => availableFields.push(...arr)); // тогда добавляем все возможные ходы в массив\r\n\t\t\t} else {\r\n\t\t\t\t// иначе добавляются только те направления, в которых дамка обязана есть\r\n\t\t\t\tfor (let i = 0; i < hasToEatArr.length; i++) {\r\n\t\t\t\t\tif (hasToEatArr[i])\r\n\t\t\t\t\t\tavailableFields.push(...cells[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatch(setSelectedCheckerPosition(position)); // добавление выбранной шашки в редакс\r\n\t\tdispatch(setAvailableFields(availableFields)); // добавление возможных для шашки ходов в редакс\r\n\t}\r\n\r\n\tconst checkersFieldProps = {\r\n\t\tgameField: gameField,\r\n\t\tplayerColor: playerColor,\r\n\t\tselectedCheckerPosition: selectedCheckerPosition,\r\n\t\tonSelectChecker: onSelectChecker,\r\n\t\tavailableFields: availableFields,\r\n\t}\r\n\r\n\treturn (\r\n\t\t<GamePage checkersFieldProps={checkersFieldProps}/>\r\n\t);\r\n}\r\n\r\nexport default withAuthRedirect(GamePageContainer);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getInfoFromTokenAsync, selectToken, selectUserId, tryLogOutAsync} from \"../../Redux/AuthReducer\";\r\nimport LoaderFullSpace from \"../Common/LoaderFullSpace/LoaderFullSpace\";\r\nimport {getTokenFromCookie} from \"../../Cookie/AuthWithCookie\";\r\n\r\n// пропускает на нужную страницу только если пользователь авторизован\r\n// иначе редиректит на страницу авторизации\r\nconst withAuthRedirect = (Component) => {\r\n\treturn (props) => {\r\n\t\tconst userId = useSelector(selectUserId);\r\n\t\tconst token = useSelector(selectToken);\r\n\t\tconst dispatch = useDispatch();\r\n\r\n\t\t// проверка, что токен не был отозван\r\n\t\tif (getTokenFromCookie() !== token) {\r\n\t\t\tdispatch(tryLogOutAsync()); // если отозван, то на всякий случай диспатчим logout\r\n\t\t\treturn <Navigate to={\"/login\"}/> // редирект на страницу авторизации\r\n\t\t}\r\n\r\n\t\t// если токен есть (получен из куки), а идентификатора пользователя нет, значит надо подгрузить информацию о пользователе\r\n\t\tReact.useEffect(() => {\r\n\t\t\tif (token && !userId) {\r\n\t\t\t\tdispatch(getInfoFromTokenAsync(token));\r\n\t\t\t}\r\n\t\t});\r\n\t\t// при этом отображается загрузка\r\n\t\tif (token && !userId) {\r\n\t\t\treturn <LoaderFullSpace/>\r\n\t\t}\r\n\r\n\t\t// если авторизация пройдена, то рендерится нужный компонент, иначе редирект на страницу авторизации\r\n\t\tif (userId)\r\n\t\t\treturn <Component {...props}/>\r\n\t\treturn <Navigate to={\"/login\"}/>\r\n\t}\r\n}\r\n\r\nexport default withAuthRedirect;","// This icon file is generated automatically.\nvar FrownOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM512 533c-85.5 0-155.6 67.3-160 151.6a8 8 0 008 8.4h48.1c4.2 0 7.8-3.2 8.1-7.4C420 636.1 461.5 597 512 597s92.1 39.1 95.8 88.6c.3 4.2 3.9 7.4 8.1 7.4H664a8 8 0 008-8.4C667.6 600.3 597.5 533 512 533z\" } }] }, \"name\": \"frown\", \"theme\": \"outlined\" };\nexport default FrownOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FrownOutlinedSvg from \"@ant-design/icons-svg/es/asn/FrownOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar FrownOutlined = function FrownOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FrownOutlinedSvg\n  }));\n};\nFrownOutlined.displayName = 'FrownOutlined';\nexport default /*#__PURE__*/React.forwardRef(FrownOutlined);","import React from \"react\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport {Button} from \"antd\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport TemplatePageWithMenu from \"../TemplatePageWithMenu/TemplatePageWithMenu\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUserId} from \"../../Redux/AuthReducer\";\r\nimport {FrownOutlined} from \"@ant-design/icons\";\r\n\r\nconst PageNotFound = ({title = \"404. Такой страницы нет\", message = \"Попробуйте ввести другой адрес\"}) => {\r\n\r\n\tconst navigate = useNavigate(); // хук для перехода на другие страницы\r\n\tconst userId = useSelector(selectUserId); // получение идентификатора пользователя для проверки его авторизации\r\n\r\n\t// тело компонента\r\n\tconst body = <>\r\n\t\t<Title>\r\n\t\t\t<FrownOutlined/>&nbsp;\r\n\t\t\t{title}\r\n\t\t</Title>\r\n\t\t<p>{message}</p>\r\n\t\t<Button type={\"primary\"} onClick={() => navigate(\"/profile\")}>\r\n\t\t\t{\r\n\t\t\t\tuserId\r\n\t\t\t\t\t? <>Перейти в профиль</>\r\n\t\t\t\t\t: <>Авторизоваться</>\r\n\t\t\t}\r\n\t\t</Button>\r\n\t</>\r\n\r\n\tif (userId) // если пользователь авторизован, то отображается боковое меню\r\n\t\treturn <TemplatePageWithMenu>{body}</TemplatePageWithMenu>;\r\n\r\n\t// иначе отображается только тело компонента\r\n\treturn <div style={{margin: \"15px\"}}>\r\n\t\t{body}\r\n\t</div>;\r\n}\r\n\r\nexport default PageNotFound;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TemplatePageWithMenu_wrapper__ixbQB\",\"sidebar\":\"TemplatePageWithMenu_sidebar__yXlI7\",\"content\":\"TemplatePageWithMenu_content__Mc3IK\"};","import React from \"react\";\r\nimport {AppstoreOutlined, PlaySquareOutlined, UserOutlined} from \"@ant-design/icons\";\r\nimport {Menu} from \"antd\";\r\nimport styles from \"./TemplatePageWithMenu.module.css\"\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectOpenedMenuBlocks, setOpenedMenuBlocks} from \"../../Redux/MenuReducer\";\r\n\r\n// элементы меню\r\n// в качестве key используется path для перехода\r\nconst menuItems = [\r\n\t{label: 'Профиль', icon: <UserOutlined/>, key: '/profile'},\r\n\t{\r\n\t\tlabel: 'Последние игры',\r\n\t\ticon: <AppstoreOutlined/>,\r\n\t\tkey: 'games',\r\n\t\tchildren: [\r\n\t\t\t{label: 'Игра', icon: <PlaySquareOutlined/>, key: '/game'},\r\n\t\t\t{label: 'Игра', icon: <PlaySquareOutlined/>, key: '/game/1'},\r\n\t\t\t{label: 'Игра', icon: <PlaySquareOutlined/>, key: '/game/2'},\r\n\t\t],\r\n\t},\r\n];\r\n\r\nconst TemplatePageWithMenu = ({children}) => {\r\n\tconst navigate = useNavigate(); // хук для перехода на другие страницы\r\n\tconst location = useLocation().pathname; // получение url странички; pathname возвращает часть пути, используемую приложением\r\n\r\n\tconst openedMenuBlocks = useSelector(selectOpenedMenuBlocks); // получение списка раскрытых блоков меню\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// обработчик нажатий на элемент меню\r\n\tconst onMenuSelect = (props) => {\r\n\t\tnavigate(props.key); // переход на страничку\r\n\t}\r\n\r\n\t// обработчик раскрытия и закрытия элементов меню\r\n\tconst onMenuBlockClick = (props) => {\r\n\t\tdispatch(setOpenedMenuBlocks(props));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<div className={styles.sidebar}>\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tmode=\"inline\"\r\n\t\t\t\t\tdefaultSelectedKeys={[location]}\r\n\t\t\t\t\tdefaultOpenKeys={openedMenuBlocks}\r\n\t\t\t\t\titems={menuItems}\r\n\t\t\t\t\tonSelect={onMenuSelect}\r\n\t\t\t\t\tonOpenChange={onMenuBlockClick}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<section className={styles.content}>\r\n\t\t\t\t{children}\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TemplatePageWithMenu;"],"names":["Checker","type","color","selected","onSelectChecker","position","playerColor","className","styles","src","CHECKER_COLOR_BLACK","CHECKER_TYPE_CHECKER","blackChecker","blackQueen","whiteChecker","whiteQueen","alt","onClick","undefined","Cell","isBlack","checker","isAvailable","Row","rowNumber","gameField","selectedCheckerPosition","availableFields","cells","letters","map","letter","find","elem","numbers","reverse","rows","number","numbersSide","lettersSide","checkersFieldProps","TemplatePageWithMenu","Title","level","danger","findChecker","withAuthRedirect","gameId","useParams","useSelector","selectGameField","selectPlayerColor","selectSelectedCheckerPosition","selectAvailableFields","dispatch","useDispatch","Number","PageNotFound","title","message","letterIndex","findIndex","numberIndex","findAvailableCellsForChecker","searchRight","searchBack","m","neighbourNumbPos","neighbourPosition","neighbour","afterNeighbourPos","findAvailableCellsForQueen","searchTop","hasToEat","letInd","numbInd","letterCondition","length","numberCondition","afterNeighbourNumber","push","hasToEatArr","positions","i","forEach","arr","setSelectedCheckerPosition","setAvailableFields","Component","props","userId","selectUserId","token","selectToken","getTokenFromCookie","tryLogOutAsync","to","React","getInfoFromTokenAsync","FrownOutlined","ref","AntdIcon","_objectSpread","icon","FrownOutlinedSvg","displayName","navigate","useNavigate","body","style","margin","menuItems","label","UserOutlined","key","AppstoreOutlined","children","PlaySquareOutlined","location","useLocation","pathname","openedMenuBlocks","selectOpenedMenuBlocks","mode","defaultSelectedKeys","defaultOpenKeys","items","onSelect","onOpenChange","setOpenedMenuBlocks"],"sourceRoot":""}